generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model activities {
  activityid    Int       @id
  name          String?   @db.VarChar(255)
  date          DateTime? @db.Date
  time          DateTime? @db.Time(6)
  room_number   String?   @db.VarChar(10)
  building_name String?   @db.VarChar(255)
}

model hasra {
  studentnetid     String  @id @db.VarChar(10)
  studentlastname  String? @db.VarChar(100)
  studentfirstname String? @db.VarChar(100)
  ranetid          String  @db.VarChar(10)
  ralastname       String? @db.VarChar(100)
  rafirstname      String? @db.VarChar(100)
}

model hasrc {
  ranetid     String  @id @db.VarChar(10)
  ralastname  String? @db.VarChar(100)
  rafirstname String? @db.VarChar(100)
  rcnetid     String  @db.VarChar(10)
  rclastname  String? @db.VarChar(100)
  rcfirstname String? @db.VarChar(100)
}

model password {
  netid    String  @id @db.VarChar(10)
  password String? @db.VarChar(25)
}

model report {
  id           Int       @id
  type         String?
  urgency      String?
  description  String?
  submitted_by String?   @db.VarChar(255)
  is_anonymous Boolean?
  location     String?
  issue_type   String?
  equipment    String?
  attachment   String?
  timestamp    DateTime? @db.Timestamp(6)
}

model users {
  netid        String         @id @db.VarChar(10)
  lastname     String?        @db.VarChar(100)
  firstname    String?        @db.VarChar(100)
  year         String?        @db.VarChar(10)
  email        String?        @db.VarChar(100)
  phone        String?        @db.VarChar(15)
  class        String?        @db.VarChar(10)
  dorm         String?        @db.VarChar(30)
  availability availability[]
}

model tasks {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  description  String?
  created_at   DateTime?      @default(now()) @db.Timestamp(6)
  updated_at   DateTime?      @default(now()) @db.Timestamp(6)
  availability availability[]
}

model availability {
  id         Int       @id @default(autoincrement())
  user_id    String    @db.VarChar(10)
  task_id    Int
  date       DateTime  @db.Date
  start_time DateTime  @db.Time(6)
  end_time   DateTime  @db.Time(6)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  tasks      tasks     @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users     @relation(fields: [user_id], references: [netid], onDelete: NoAction, onUpdate: NoAction)
}
